-If you have a StringStat(n) and n is larger than the number of characters you ever put into it, then when you try to ReturnEntropy it will divide by 0 (because N=0 since we never accumulated enough character to put a string of length n into StringStat.data).  Want to handle this in a more transparent way, either by returning entropy of 0 (and what would I return for the entropy density?), or by returning an error message.
-StringStat.ReturnN() duplicates work that is done in StringStat.ReturnEntropy().  One way to make this more efficient is to make a StringStat.N and increment it every time a new string of length n is read.  Another option is to save to StringStat.N whenever ReturnN or ReturnEntropy calculate N, but then I need a flag to let me know when this value is out of date, so probably the first method is preferable.
